{
    "_class": ["Run", "Opts"],
    "name": "polyDeg2Dim2multi",
    "path": "~/DEEDataDB",
    "truthOpts": {
        "_class": ["Truth", "Opts"],
        "reps": 1,
        "tMax": 10,
        "tStepOde": 0.01,
        "nTrajectories": 20,
        "deFunSampler": {
            "_class": ["polynomial", "Function", "Sampler", "Opts"],
            "d": 2,
            "polyDeg": 2,
            "maxNorm": 10,
            "coefSampler": {
                "_class": ["uniform", "Array", "Sampler", "Opts"],
                "range": [-0.5, 0.5]   
            }
        },
        "u0Sampler": {
            "_class": ["uniform", "Array", "Sampler", "Opts"],
            "range": [-1, 1]    
        },
        "conditions": {
            "_class": ["Condition", "List", "Opts"],
            "list": [
                {
                    "_class": ["finite", "Condition", "Opts"]
                },    
                {
                    "_class": ["bounded", "Condition", "Opts"],
                    "maxNorm": 10
                }
            ]
        }
    },
    "observationOpts": {
        "_class": ["Observation", "Opts"],
        "n": 20,
        "tStep": 0.5,
        "reps": 1,
        "scales": [0, 0.01, 0.03, 0.1],
        "noiseSampler": {
            "_class": ["normal", "Array", "Sampler", "Opts"],
            "sd": 1  
        }
    },
    "taskList": {
        "_class": ["Task", "List", "Opts"],
        "list": [
            {
                "_class": ["estiObsTrajs", "Task", "Opts"],
                "name": "observation time",
                "predictionTime": [0, 10],
                "timeStep": 0.05,
                "scoreList": {
                    "_class": ["Score", "List", "Opts"],
                    "list": [
                        {
                            "_class": ["Distance", "TimeState", "Score", "Opts"],
                            "name": "L2",
                            "method": "Euclidean"
                        },
                        {
                            "_class": ["TimeWarp", "TimeState", "Score", "Opts"],
                            "name": "WarpedL2"
                        },
                        {
                            "_class": ["Wasserstein", "StateSpace", "Score", "Opts"],
                            "name": "W2",
                            "p": 2
                        }
                    ]
                }
            },
            {
                "_class": ["newTrajs", "Task", "Opts"],
                "name": "new trajectories",
                "predictionTime": [0, 10],
                "timeStep": 0.05,
                "initialState": [
                    [ 0, 0],
                    [ 1, 0],
                    [ 0, 1],
                    [-1, 0],
                    [ 0,-1]
                ],
                "scoreList": {
                    "_class": ["Score", "List", "Opts"],
                    "list": [
                        {
                            "_class": ["Distance", "TimeState", "Score", "Opts"],
                            "name": "L2",
                            "method": "Euclidean"
                        },
                        {
                            "_class": ["TimeWarp", "TimeState", "Score", "Opts"],
                            "name": "WarpedL2"
                        },
                        {
                            "_class": ["Wasserstein", "StateSpace", "Score", "Opts"],
                            "name": "W2",
                            "p": 2
                        }
                    ]
                }
            },
            {
                "_class": ["velocity", "Task", "Opts"],
                "name": "velocity",
                "gridRanges": [[-1, 1], [-1, 1]],
                "gridSteps": [0.1, 0.1],
                "scoreList": {
                    "_class": ["Score", "List", "Opts"],
                    "list": [
                        {
                            "_class": ["Distance", "VelocityField", "Score", "Opts"],
                            "name": "L2",
                            "method": "Euclidean"
                        }
                    ]
                }
            }
        ]
    }
}
